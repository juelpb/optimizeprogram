# -*- coding: utf-8 -*-
"""
Created on Mon Feb 14 17:07:27 2022

@author: oyvinpet
"""
#%%
import sys

sys.path.append("C:/Cloud/OD_OWP/Work/Python/Github/abaqustools")

import numtools
import numpy as np

from ypstruct import *
import Corot
from ProcessModel import *
from NonLinearSolver import *

#%% Hardanger cable, initial geometry


GeoData1=np.array([
981,-826.69100,8.66000,102.76300 ,
982,-818.13621,8.58950,106.99984 ,
983,-809.58143,8.51900,111.23668 ,
984,-801.02665,8.44850,115.47353 ,
985,-792.47186,8.37800,119.71037 ,
986,-783.91707,8.30750,123.94721 ,
987,-775.36229,8.23700,128.18405 ,
988,-766.80750,8.16650,132.42089 ,
989,-758.25272,8.09600,136.65773 ,
990,-749.69794,8.02550,140.89458 ,
991,-741.14315,7.95500,145.13142 ,
992,-732.58836,7.88450,149.36826 ,
993,-724.03358,7.81400,153.60510 ,
994,-715.47879,7.74350,157.84194 ,
995,-706.92401,7.67300,162.07879 ,
996,-698.36923,7.60250,166.31563 ,
997,-689.81444,7.53200,170.55247 ,
998,-681.25965,7.46150,174.78931 ,
999,-672.70487,7.39100,179.02615 ,
1000,-664.15008,7.32050,183.26299, 
1001,-655.59530,7.25000,187.49984, 
1002,-640.37466,7.25000,182.37142, 
1003,-620.25619,7.25000,175.78400, 
1004,-600.15149,7.25000,169.41799, 
1005,-580.05420,7.25000,163.27035, 
1006,-559.96470,7.25000,157.34033, 
1007,-539.88296,7.25000,151.62704, 
1008,-519.80891,7.25000,146.12960, 
1009,-499.74261,7.25000,140.84721, 
1010,-479.68381,7.25000,135.77901, 
1011,-459.63254,7.25000,130.92423, 
1012,-439.58860,7.25000,126.28209, 
1013,-419.55193,7.25000,121.85184, 
1014,-399.52233,7.25000,117.63277, 
1015,-379.49963,7.25000,113.62418, 
1016,-359.48356,7.25000,109.82537, 
1017,-339.47402,7.25000,106.23573, 
1018,-319.47064,7.25000,102.85461, 
1019,-299.47325,7.25000,99.68146 ,
1020,-279.48145,7.25000,96.71569 ,
1021,-259.49508,7.25000,93.95680 ,
1022,-239.51364,7.25000,91.40427 ,
1023,-219.53706,7.25000,89.05769 ,
1024,-199.56477,7.25000,86.91659 ,
1025,-179.59657,7.25000,84.98061 ,
1026,-159.63199,7.25000,83.24937 ,
1027,-139.67076,7.25000,81.72258 ,
1028,-119.71238,7.25000,80.39993 ,
1029,-99.75648,7.25000,79.28118 ,
1030,-79.80259,7.25000,78.36612 ,
1031,-59.85051,7.25000,77.65459 ,
1032,-39.89967,7.25000,77.14646 ,
1033,-19.94960,7.25000,76.84161 ,
1034,-0.00000,7.25000,76.74000 ,
1035,19.94960,7.25000,76.84161 ,
1036,39.89967,7.25000,77.14646 ,
1037,59.85051,7.25000,77.65459 ,
1038,79.80259,7.25000,78.36612 ,
1039,99.75648,7.25000,79.28118 ,
1040,119.71238,7.25000,80.39993 ,
1041,139.67076,7.25000,81.72258 ,
1042,159.63199,7.25000,83.24937 ,
1043,179.59657,7.25000,84.98061 ,
1044,199.56477,7.25000,86.91659 ,
1045,219.53706,7.25000,89.05769 ,
1046,239.51364,7.25000,91.40427 ,
1047,259.49508,7.25000,93.95680 ,
1048,279.48145,7.25000,96.71569 ,
1049,299.47325,7.25000,99.68146 ,
1050,319.47064,7.25000,102.85461 ,
1051,339.47402,7.25000,106.23573 ,
1052,359.48356,7.25000,109.82537 ,
1053,379.49963,7.25000,113.62418 ,
1054,399.52233,7.25000,117.63277 ,
1055,419.55193,7.25000,121.85184 ,
1056,439.58860,7.25000,126.28209 ,
1057,459.63254,7.25000,130.92423 ,
1058,479.68381,7.25000,135.77901 ,
1059,499.74261,7.25000,140.84721 ,
1060,519.80891,7.25000,146.12960 ,
1061,539.88296,7.25000,151.62704 ,
1062,559.96470,7.25000,157.34033 ,
1063,580.05420,7.25000,163.27035 ,
1064,600.15149,7.25000,169.41799 ,
1065,620.25619,7.25000,175.78400 ,
1066,640.37466,7.25000,182.37142 ,
1067,655.59530,7.25000,187.49984 ,
1068,664.15008,7.32050,183.26299 ,
1069,672.70487,7.39100,179.02615 ,
1070,681.25965,7.46150,174.78931 ,
1071,689.81444,7.53200,170.55247 ,
1072,698.36923,7.60250,166.31563 ,
1073,706.92401,7.67300,162.07879 ,
1074,715.47879,7.74350,157.84194 ,
1075,724.03358,7.81400,153.60510 ,
1076,732.58836,7.88450,149.36826 ,
1077,741.14315,7.95500,145.13142 ,
1078,749.69794,8.02550,140.89458 ,
1079,758.25272,8.09600,136.65773 ,
1080,766.80750,8.16650,132.42089 ,
1081,775.36229,8.23700,128.18405 ,
1082,783.91707,8.30750,123.94721 ,
1083,792.47186,8.37800,119.71037 ,
1084,801.02665,8.44850,115.47353 ,
1085,809.58143,8.51900,111.23668 ,
1086,818.13621,8.58950,106.99984 ,
1087,826.69100,8.66000,102.76300 
])



GeoData2=np.array([
1981,-826.69100,-8.66000,102.76300 ,
1982,-818.13621,-8.59000,106.99984 ,
1983,-809.58143,-8.51900,111.23668 ,
1984,-801.02665,-8.44900,115.47353 ,
1985,-792.47186,-8.37800,119.71037 ,
1986,-783.91707,-8.30800,123.94721 ,
1987,-775.36229,-8.23700,128.18405 ,
1988,-766.80750,-8.16700,132.42089 ,
1989,-758.25272,-8.09600,136.65773 ,
1990,-749.69794,-8.02600,140.89458 ,
1991,-741.14315,-7.95500,145.13142 ,
1992,-732.58836,-7.88500,149.36826 ,
1993,-724.03358,-7.81400,153.60510 ,
1994,-715.47879,-7.74400,157.84194 ,
1995,-706.92401,-7.67300,162.07879 ,
1996,-698.36923,-7.60300,166.31563 ,
1997,-689.81444,-7.53200,170.55247 ,
1998,-681.25965,-7.46200,174.78931 ,
1999,-672.70487,-7.39100,179.02615 ,
2000,-664.15008,-7.32100,183.26299 ,
2001,-655.59530,-7.25000,187.49984 ,
2002,-640.37466,-7.25000,182.37142 ,
2003,-620.25619,-7.25000,175.78400 ,
2004,-600.15149,-7.25000,169.41799 ,
2005,-580.05420,-7.25000,163.27035 ,
2006,-559.96470,-7.25000,157.34033 ,
2007,-539.88296,-7.25000,151.62704 ,
2008,-519.80891,-7.25000,146.12960 ,
2009,-499.74261,-7.25000,140.84721 ,
2010,-479.68381,-7.25000,135.77901 ,
2011,-459.63254,-7.25000,130.92423 ,
2012,-439.58860,-7.25000,126.28209 ,
2013,-419.55193,-7.25000,121.85184 ,
2014,-399.52233,-7.25000,117.63277 ,
2015,-379.49963,-7.25000,113.62418 ,
2016,-359.48356,-7.25000,109.82537 ,
2017,-339.47402,-7.25000,106.23573 ,
2018,-319.47064,-7.25000,102.85461 ,
2019,-299.47325,-7.25000,99.68146 ,
2020,-279.48145,-7.25000,96.71569 ,
2021,-259.49508,-7.25000,93.95680 ,
2022,-239.51364,-7.25000,91.40427 ,
2023,-219.53706,-7.25000,89.05769 ,
2024,-199.56477,-7.25000,86.91659 ,
2025,-179.59657,-7.25000,84.98061 ,
2026,-159.63199,-7.25000,83.24937 ,
2027,-139.67076,-7.25000,81.72258 ,
2028,-119.71238,-7.25000,80.39993 ,
2029,-99.75648,-7.25000,79.28118 ,
2030,-79.80259,-7.25000,78.36612 ,
2031,-59.85051,-7.25000,77.65459 ,
2032,-39.89967,-7.25000,77.14646 ,
2033,-19.94960,-7.25000,76.84161 ,
2034,-0.00000,-7.25000,76.74000 ,
2035,19.94960,-7.25000,76.84161 ,
2036,39.89967,-7.25000,77.14646 ,
2037,59.85051,-7.25000,77.65459 ,
2038,79.80259,-7.25000,78.36612 ,
2039,99.75648,-7.25000,79.28118 ,
2040,119.71238,-7.25000,80.39993 ,
2041,139.67076,-7.25000,81.72258 ,
2042,159.63199,-7.25000,83.24937 ,
2043,179.59657,-7.25000,84.98061 ,
2044,199.56477,-7.25000,86.91659 ,
2045,219.53706,-7.25000,89.05769 ,
2046,239.51364,-7.25000,91.40427 ,
2047,259.49508,-7.25000,93.95680 ,
2048,279.48145,-7.25000,96.71569 ,
2049,299.47325,-7.25000,99.68146 ,
2050,319.47064,-7.25000,102.85461 ,
2051,339.47402,-7.25000,106.23573 ,
2052,359.48356,-7.25000,109.82537 ,
2053,379.49963,-7.25000,113.62418 ,
2054,399.52233,-7.25000,117.63277 ,
2055,419.55193,-7.25000,121.85184 ,
2056,439.58860,-7.25000,126.28209 ,
2057,459.63254,-7.25000,130.92423 ,
2058,479.68381,-7.25000,135.77901 ,
2059,499.74261,-7.25000,140.84721 ,
2060,519.80891,-7.25000,146.12960 ,
2061,539.88296,-7.25000,151.62704 ,
2062,559.96470,-7.25000,157.34033 ,
2063,580.05420,-7.25000,163.27035 ,
2064,600.15149,-7.25000,169.41799 ,
2065,620.25619,-7.25000,175.78400 ,
2066,640.37466,-7.25000,182.37142 ,
2067,655.59530,-7.25000,187.49984 ,
2068,664.15008,-7.32100,183.26299 ,
2069,672.70487,-7.39100,179.02615 ,
2070,681.25965,-7.46200,174.78931 ,
2071,689.81444,-7.53200,170.55247 ,
2072,698.36923,-7.60300,166.31563 ,
2073,706.92401,-7.67300,162.07879 ,
2074,715.47879,-7.74400,157.84194 ,
2075,724.03358,-7.81400,153.60510 ,
2076,732.58836,-7.88500,149.36826 ,
2077,741.14315,-7.95500,145.13142 ,
2078,749.69794,-8.02600,140.89458 ,
2079,758.25272,-8.09600,136.65773 ,
2080,766.80750,-8.16700,132.42089 ,
2081,775.36229,-8.23700,128.18405 ,
2082,783.91707,-8.30800,123.94721 ,
2083,792.47186,-8.37800,119.71037 ,
2084,801.02665,-8.44900,115.47353 ,
2085,809.58143,-8.51900,111.23668 ,
2086,818.13621,-8.59000,106.99984 ,
2087,826.69100,-8.66000,102.76300 
])

GeoData1=np.reshape(GeoData1,(107,4))
GeoData2=np.reshape(GeoData2,(107,4))

N_node=107
ElementMatrix1=np.column_stack((
    GeoData1[:-1,0],np.arange(N_node-1),np.arange(N_node-1)+1,np.ones(N_node-1)))
    
ElementMatrix2=np.column_stack((
    GeoData2[:-1,0],np.arange(N_node-1)+N_node,np.arange(N_node-1)+1+N_node,np.ones(N_node-1)))
        
    
NodeMatrix=np.vstack((GeoData1,GeoData2))
ElementMatrix=np.vstack((ElementMatrix1,ElementMatrix2)).astype(int)




#%%

ModelInfo=struct()

ModelInfo.NodeMatrix=NodeMatrix
ModelInfo.ElementMatrix=ElementMatrix
    
ModelInfo.e2mat=np.column_stack((
    NodeMatrix[:-1,0],np.zeros(N_node*2-1),np.ones(N_node*2-1),np.zeros(N_node*2-1)
    )).astype(int)

ModelInfo.DofLabel=numtools.genlabel(ModelInfo.NodeMatrix[:,0],'all')

ModelInfo.DofExclude= [
    '981_U1' , '981_U2' , '981_U3' , '1087_U1' , '1087_U2' , '1087_U3' , '1001_U2' , '1067_U2' , '1001_U3' , '1067_U3' ,
    '1981_U1' , '1981_U2' , '1981_U3' , '2087_U1' , '2087_U2' , '2087_U3' , '2001_U2' , '2067_U2' , '2001_U3' , '2067_U3' ]

ModelInfo.A=[0.213]
ModelInfo.Iz=[6e-5]
ModelInfo.Iy=[6e-5]
ModelInfo.It=[1.2e-4]
ModelInfo.E=[2.0e11]
ModelInfo.G=[0.8e11]
ModelInfo.rho=[8676]

ModelInfo=ProcessModel(ModelInfo)

P=Corot.GravityLoad2(ModelInfo)

P_loadstep=[P]

#%%

# t0a=numtools.tic()
(r,KT,K_add,RHS,N)=NonLinearSolver(ModelInfo,P_loadstep,LoadIncrements=6,norm_tol=1e-6)
# numtools.toc(t0a)


raise SystemExit

#%%

import matplotlib.pyplot as plt
plt.plot(GeoData2[:,1],r[0::6])
plt.plot(GeoData2[:,1],r[2::6])

plt.ylabel('some numbers')
plt.show()

# t0a=numtools.tic()
# numtools.toc(t0a)

